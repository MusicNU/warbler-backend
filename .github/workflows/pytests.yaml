name: Python unit tests over API and functions using Pytest

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

permissions:
  id-token: write
  contents: read

env:
  API_URL: ${{ secrets.API_URL }}
  AUDIVERIS_API_URL: ${{ secrets.AUDIVERIS_API_URL }}
  AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_GITHUB_ACTIONS_ROLE: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@main
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Test AWS Credentials
      run: aws sts get-caller-identity
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Start Flask (background) and wait for readiness
      run: |
        # start Flask in background on port 5000
        flask --app src/api/main.py run --host=127.0.0.1 --port=5000 &
        FLASK_PID=$!
        # wait up to 60s for the app to respond
        for i in $(seq 1 60); do
          if curl -sSf http://127.0.0.1:5000/app-health >/dev/null; then
            echo "Flask is up"
            break
          fi
          sleep 1
        done
        # optionally fail if not up
        if ! curl -sSf http://127.0.0.1:5000/app-health >/dev/null; then
          echo "Flask did not start in time" >&2
          kill $FLASK_PID || true
          exit 1
        fi
    - name: Test with pytest
      run: |
        pytest -s
    - name: Authenticate Docker client 
      run: 
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 089276191632.dkr.ecr.us-east-2.amazonaws.com
    - name: Build Docker image
      run: 
        docker build -t musicnu/warbler-backend .
    - name: Tag image
      run:  
        docker tag musicnu/warbler-backend:latest 089276191632.dkr.ecr.us-east-2.amazonaws.com/musicnu/warbler-backend:latest
    - name: Push image to ECR  
      run:
        docker push 089276191632.dkr.ecr.us-east-2.amazonaws.com/musicnu/warbler-backend:latest